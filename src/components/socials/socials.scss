// Variables
@import '../../style/variables/variables';

.card {
    position: relative;
    width: calc(400px - 20px);
    height: calc(400px - 20px);
    background: lightgrey;
    border-radius: 30px;
    overflow: hidden;
    transition: all 1s ease-in-out;
    border: 2px solid $colorFontSizeButton;
    box-shadow: 0px 0px 20px $boxShadowMain;
  }

.background {
    position: absolute;
    // Raccourci CSS équivalent à "top: 0; right: 0; bottom: 0; left: 0;"
    inset: 0;
    background-color: #4158D0;
    background-image: $bgColorFooter;
  }

  .socialsText {
    position: absolute;
    right: 50%;
    bottom: 50%;
    transform: translate(50%, 50%);
    transition: all 0.6s ease-in-out;
    font-family: $font-museoModerno;
    font-size: 1.3em;
    font-weight: bold;
    // On définit l'espacement entre les caractères (ou lettres) du texte
    letter-spacing: 2px;
  }

  .containerIcon {
    display: inline-block;
    width: 20px;
    height: 20px;
    &__icon {
        // On définit la couleur de remplissage des icons
        fill: $colorFontSizeButton;
        height: 30px;
        width: 100%;
        transition: all 0.5s ease-in-out;
    }
  }

.box {
    position: absolute;
    padding: 10px;
    text-align: right;
    background: rgba(255, 255, 255, 0.389);
    border-top: 2px solid $colorFontSizeButton;
    border-right: 1px solid $colorFontSizeButton;
    border-radius: 10% 13% 42% 0%/10% 12% 75% 0%;
    box-shadow: rgba(100, 100, 111, 0.364) -7px 7px 29px 0px;
    transform-origin: bottom left;
    transition: all 1s ease-in-out;
  }

  .box::before {
    content: "";
    position: absolute;
    inset: 0;
    // Avec "inherit", l'élément enfant prendra la même valeur de rayon de bordure que son parent.
    border-radius: inherit;
    opacity: 0;
    transition: all 0.5s ease-in-out;
  }

  .box:hover .containerIcon {
    &__icon {
        fill: $colorFontSizeButton;
    }
  }

  .box1 {
    width: 70%;
    height: 70%;
    bottom: -70%;
    left: -70%;
  }

  .box1::before {
    background: radial-gradient(circle at 30% 107%, #fdf497 0%, #fdf497 5%, #ff53d4 60%, #62c2fe 90%);
  }

  .box1:hover::before {
    opacity: 1;
  }

  .box1:hover .containerIcon {
    &__icon {
        filter: drop-shadow(0 0 5px white);
    }  
  }

  .box2 {
    width: 50%;
    height: 50%;
    bottom: -50%;
    left: -50%;
    transition-delay: 0.2s;
  }

  .box2::before {
    background: radial-gradient(circle at 30% 107%, #91e9ff 0%, #00ACEE 90%);
  }

  .box2:hover::before {
    opacity: 1;
  }

  .box2:hover .containerIcon {
    &__icon {
        filter: drop-shadow(0 0 5px white);
    }  
  }

  .box3 {
    width: 30%;
    height: 30%;
    bottom: -30%;
    left: -30%;
    transition-delay: 0.4s;
  }

  .box3::before {
    background: radial-gradient(circle at 30% 107%, #969fff 0%, #b349ff 90%);
  }

.box3:hover::before {
    opacity: 1;
  }

.box3:hover .containerIcon {
    &__icon {
        filter: drop-shadow(0 0 5px white);
    } 
  }

.box4 {
    width: 10%;
    height: 10%;
    bottom: -10%;
    left: -10%;
    transition-delay: 0.6s;
  }

  .card:hover {
    transform: scale(1.1);
  }

.card:hover .box {
    bottom: -1px;
    left: -1px;
  }

  .card:hover .socialsText {
    transform: translate(50%, -116px);
    letter-spacing: 0px;
  }

  /******* Media queries **********/
  /*  Small devices (tablets, less than 457px)  */
@media (max-width: 456px) {
  .card {
    width: calc(200px - 20px);
    height: calc(200px - 20px);
  }

  .socialsText {
    font-size: 0.8em;
    letter-spacing: 3px;
  }

  .containerIcon__icon {
    height: 22px;
        width: 100%;
  }
}
  
  